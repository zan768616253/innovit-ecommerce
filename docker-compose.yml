version: '3.8'

services:
  strapi:
    build:
      context: .
      dockerfile: docker/Dockerfile.api.dev
    image: innovit-ecommerce-strapi:20231023
    restart: unless-stopped
    env_file: .env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: strapiDB
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      NODE_ENV: ${NODE_ENV}
    container_name: strapi
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    ports:
      - "1337:1337"
    networks:
      - innovit_academy
    depends_on:
      - strapiDB

  strapiDB:
    build:
      context: .
      dockerfile: docker/Dockerfile.pg.dev
    image: innovit-pg:20231023
    restart: unless-stopped
    env_file: .env
    volumes:
      - postgresql-data:/var/lib/postgresql/14/main
      - ./scripts:/usr/local/innovit/scripts
    environment:
      POSTGRES_PASSWORD: pg
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
    container_name: strapiDB
    ports:
       - "65432:5432"
    networks:
      - innovit_academy
    entrypoint: "/usr/local/innovit/scripts/bash/startDatabase.sh"
    command: [ "PostgreSQL" ]

networks:
  innovit_academy:
    name: InnovitAcademy
    driver: bridge

volumes:
  postgresql-data:
